apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-meshcentral-config
  namespace: {{ .Release.Namespace }}
data:
  config.json: |-
    {{- $preconfigured := .Values.meshcentral.config.preconfiguredJson | default dict }}
    {{- $settings := .Values.meshcentral.config.settings | toJson | fromJson }}
    {{- $database := dict }}

    {{- /* Define a helper to extract database config from a Secret */}}
    {{- define "getDbConfigFromSecret" }}
      {{- $db := index . 0 }}
      {{- $secretName := index . 1 }}
      {{- $secretKeys := index . 2 }}
      {{- $namespace := index . 3 }}
      {{- $lookupSecret := (lookup "v1" "Secret" $namespace $secretName) | default dict }}
      {{- if $lookupSecret.data }}
        {{- $db = merge $db (dict
          "host"     ((get $lookupSecret.data $secretKeys.host) | b64dec | default $db.host),
          "user"     ((get $lookupSecret.data $secretKeys.user) | b64dec | default $db.user),
          "password" ((get $lookupSecret.data $secretKeys.password) | b64dec | default $db.password),
          "database" ((get $lookupSecret.data $secretKeys.database) | b64dec | default $db.database)
        ) }}
      {{- end }}
      {{- return $db }}
    {{- end }}

    {{- /* Process MariaDB */}}
    {{- if .Values.meshcentral.database.mariaDB.enabled }}
      {{- $mariaDB := .Values.meshcentral.database.mariaDB }}
      {{- if $mariaDB.secret }}
        {{- $mariaDB = include "getDbConfigFromSecret" (list $mariaDB $mariaDB.secret $mariaDB.secretKeys .Release.Namespace) | fromYaml }}
      {{- end }}
      {{- $database = merge $database (dict "mariaDB" $mariaDB) }}
    {{- end }}

    {{- /* Process MySQL */}}
    {{- if .Values.meshcentral.database.mySQL.enabled }}
      {{- $mySQL := .Values.meshcentral.database.mySQL }}
      {{- if $mySQL.secret }}
        {{- $mySQL = include "getDbConfigFromSecret" (list $mySQL $mySQL.secret $mySQL.secretKeys .Release.Namespace) | fromYaml }}
      {{- end }}
      {{- $database = merge $database (dict "mySQL" $mySQL) }}
    {{- end }}

    {{- /* Process Postgres */}}
    {{- if .Values.meshcentral.database.postgres.enabled }}
      {{- $postgres := .Values.meshcentral.database.postgres }}
      {{- if $postgres.secret }}
        {{- $postgres = include "getDbConfigFromSecret" (list $postgres $postgres.secret $postgres.secretKeys .Release.Namespace) | fromYaml }}
      {{- end }}
      {{- $database = merge $database (dict "postgres" $postgres) }}
    {{- end }}

    {{- /* Merge everything */}}
    {{- $merged := merge $preconfigured $settings $database }}
    {{ $merged | toJson | nindent 4 }}
